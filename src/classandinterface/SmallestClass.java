package classandinterface;

/**
 * @program: Effective Java
 * @description: 类和成员访问最小化
 * @author: 王志立
 * @create: 2019-01-04 11:10
 **/
public class SmallestClass {
    //todo 使类个成员的可访问性最小化
    /* 1. 设计良好的模块的最最重要的因素在于，这个模块对于其他的外部实现而言，是否隐藏其内部的数据和其他的实现细节。设计良好的模块会隐藏所有的实现细节把他的API和他的实现清晰的隔离起来，模块只通过API进行通讯，一个模块不需要知道其他的模块的内部工作情况
     * 2. 可以解除构成系统的各个模块之间的额关系，使模块可以独立进行并行开发，测试，优化，理解和修改。
     * 3. 设计类的时候:要尽可能的使每个类的成员不被外部访问。应该使用与正在编写软件对应功能相一致的，尽可能小的访问级别。
     * 4. 实例域绝不能是公有的，如果这个域设置为公有的，就放弃了这个域的不可变能力，同时，当这个域被修改的时候，对他失去了采取任何行动的能力，因此包含公有不可变域的类并不是线程安全的。
     * 5. 类具有公有的静态final数组域，或者返回这个域的返回方法，这几乎总是错误的。//很多IDE会返回指向私有域的访问方法
     * 6. 设计类要尽可能降低类的可访问性，除了公有静态final域的特殊情况外，公有类都不应该包含公有域。并且要确保final域所引用的对象都是不可变的。
     */

    public static void main(String[] args) {

    }
}
